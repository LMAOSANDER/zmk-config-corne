/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RET
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp SQT
                  &kp LGUI &sl 1 &kp SPACE   &kp LSHFT &sl 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB   &kp FSLH  &kp N9 &kp N8 &kp N7 &kp STAR    &trans   &trans   &trans &trans    &trans &kp BSPC
   &kp ESC   &kp MINUS &kp N3 &kp N2 &kp N1 &kp PLUS    &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LCTRL &kp X     &kp N6 &kp N5 &kp N4 &kp PRCNT   &trans   &trans   &trans &trans    &trans &trans
                            &kp LGUI &trans &kp SPACE   &kp N0 &trans &kp RALT
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB   &kp GRAVE &kp LT   &kp GT   &kp MINUS &kp PIPE    &kp CARET &kp LBRC  &kp RBRC  &kp DLLR &kp UNDER &kp BSPC
   &kp LCTRL &kp EXCL  &kp STAR &kp FSLH &kp EQUAL &kp AMPS    &kp HASH  &kp LPAR  &kp RPAR  &kp SEMI &kp DQT   &kp RET
   &kp LSHFT &kp TILDE &kp PLUS &kp LBKT &kp RBKT  &kp PRCNT   &kp AT    &kp COLON &kp COMMA &kp DOT  &kp BSLH  &kp SQT
                                   &kp LGUI &trans &kp SPACE   &kp LSHIFT &trans &kp RALT
                        >;
                };
                mouse_layer {
// 
                        bindings = <
   &kp TAB   &none &none    &none    &none     &none       &msc SCRL_LEFT &msc SCRL_DOWN &mmv MOVE_UP   &msc SCRL_UP    &msc SCRL_RIGHT &kp BSPC
   &kp LCTRL &none &mkp MB4 &mkp MB5 &mkp LCLK &mkp RCLK   &none          &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none           &kp RET
   &kp LSHFT &none &none    &none    &none     &none       &none          &none          &none          &none           &none           &kp SQT
                               &kp LGUI &trans &kp SPACE   &kp LSHIFT &trans &kp RALT
                        >;
                };
        };
};
